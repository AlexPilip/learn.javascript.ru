/*
Задание 41.
Вычислить сумму чисел до данного
важность: 5

Напишите функцию sumTo(n), которая для данного n вычисляет сумму чисел от 1 до n, например:

sumTo(1) = 1
sumTo(2) = 2 + 1 = 3
sumTo(3) = 3 + 2 + 1 = 6
sumTo(4) = 4 + 3 + 2 + 1 = 10
...
sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050

Сделайте три варианта решения:

    С использованием цикла.
    Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) для n > 1.
    С использованием формулы для суммы арифметической прогрессии.

Пример работы вашей функции:

function sumTo(n) { /*... ваш код ... */ }

alert( sumTo(100) ); // 5050

Какой вариант решения самый быстрый? Самый медленный? Почему?

    http://learn.javascript.ru/task/sum-to
*//


// С использованием цикла.
    
function sumTo(n) {
var result = 0;
for(i=0; i <= n; i++) {
   result = result + i; 
}
return result;
}

// Через рекурсию

function sumTo(n) {
    if (n == 1) return n;
    return n + sumTo(n-1)
} 

// С использованием формулы для суммы арифметической прогрессии

function sumTo(n) {
    var x = (1 + n)/2 * n;
    return x;
}  

// Самый быстрый вариант через формулу; самый медленный через рекурсию, потому что нужно хранить в памяти все промежуточные значения

