/*
Задание 27.
Решето Эратосфена
важность: 3

Целое число, большее 1, называется простым, если оно не делится нацело ни на какое другое, кроме себя и 1.

Древний алгоритм «Решето Эратосфена» для поиска всех простых чисел до n выглядит так:

1. Создать список последовательных чисел от 2 до n: 2, 3, 4, ..., n.
    Пусть p=2, это первое простое число.
    Зачеркнуть все последующие числа в списке с разницей в p, т.е. 2*p, 3*p, 4*p и т.д. В случае p=2 это будут 4,6,8....
    Поменять значение p на первое не зачеркнутое число после p.
    Повторить шаги 3-4 пока p2 < n.
    Все оставшиеся не зачеркнутыми числа – простые.

Посмотрите также анимацию алгоритма.

Реализуйте «Решето Эратосфена» в JavaScript, используя массив.

Найдите все простые числа до 100 и выведите их сумму.


https://learn.javascript.ru/task/eratosthenes-sieve
*/

// 1. Создать список последовательных чисел от 2 до 100

var arr = [];
for (var a = 2; a <=100; a++) {
    arr.push(a);
}

/* Пусть p=2, это первое простое число. Зачеркнуть все последующие числа в списке с разницей в p, т.е. 2*p, 3*p, 4*p и т.д. Поменять значение p на первое не зачеркнутое число после p.
*/

for (var i = 0; i < arr.length; i++) {
if (arr[i] % arr[0] == 0 && arr[i] / arr[0] > 1) {
    delete arr[i];
}
}

// Повторить шаги 3-4 пока p2 < n.
/* Вот здесь не знаю как реализовать. Казалось бы достаточно в условие добавить вместо i < arr.length  i < Math.sqrt(arr.length), но так это не работает: длинна массива в любом случае остаётся 101 (последний элемент плюс 1). А создавать на каждую итерацию новый массив кажется нерациональным и вообще непонятно как это реализовать. Так что пусть будет как есть
*/

// Найдите все простые числа до 100 и выведите их сумму.

var sum = 0;

for (var i = 0; i < arr.length; i++) {
    
    if (arr[i] !== undefined) {
        sum += arr[i];
    }
}

alert(sum); // 2501

// Условие  if (arr[i] !== undefined) конечно можно упростить  if (arr[i])